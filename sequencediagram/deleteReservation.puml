@startuml

footer Page %page% of %lastpage%
title "Delete Reservation for user, admin and company"

actor "User" as user
actor "Admin" as admin
actor "Company" as company
participant "server" as server
participant "<<router>>\ntimeslot" as routerTime
participant "<<router>>\nreservation" as routerReserv
participant "<<middleware>>\nauth" as middleAuth
participant "<<controllers>>\nreservation" as controllersReserv
participant "<<model>>\nTimeslot" as modelTimeslot
participant "<<model>>\nUser" as modelUser
participant "<<model>>\nReservation" as modelReserv
database "MongoDB" as mongoDB

group Loop
    'get reservations for user
    group opt 
        activate user
        activate server
        activate routerTime
        activate routerReserv
        activate middleAuth
        activate controllersReserv
        activate modelUser
        activate modelReserv
        activate mongoDB
        activate admin
        activate company
        activate modelTimeslot

        user->server :deleteReservation\n(token,id)
        admin -> server :deleteReservation\n(token,id)
        server->routerReserv :use('/api/reservation',reservation)
        routerReserv -> middleAuth : protect(token)
        middleAuth -> middleAuth : decode(token)
        middleAuth -> modelUser : User.findBy(decodetoken)
        modelUser -> mongoDB : findById(decodetoken)

        modelUser <-- mongoDB : user
        middleAuth <-- modelUser : user
        routerReserv <-- middleAuth : next()

        routerReserv -> controllersReserv : delete('/:id',deleteReservation)
        controllersReserv -> modelReserv :  Reservation.findById(req.params.id);
        modelReserv -> mongoDB :  find(req.params.id);

        modelReserv <-- mongoDB : reservation
        controllersReserv <-- modelReserv : reservation

        controllersReserv -> modelUser : User.findByIdAndUpdate\n(reservation.user , \n{$pull : {reservation : req.params.id}})
        modelUser -> mongoDB : findByIdAndUpdate\n(reservation.user , \n{$pull : {reservation : req.params.id}})
        
        modelUser <-- mongoDB : user
        controllersReserv <-- modelUser : user

        controllersReserv -> modelTimeslot : TimeSlot.findByIdAndUpdate\n(reservation.timeslot , \n{$pull : {reservation : req.params.id}})
        modelTimeslot -> mongoDB : findByIdAndUpdate\n(reservation.timeslot , \n{$pull : {reservation : req.params.id}})

        modelTimeslot <-- mongoDB : timeslot
        controllersReserv <-- modelTimeslot : timeslot

        controllersReserv -> modelReserv : reservation.deleteOne()
        modelReserv -> mongoDB : deleteOne()
        
        modelReserv <- mongoDB :return
        controllersReserv <- modelReserv : return
        routerReserv <- controllersReserv : return
        server <- routerReserv : return
        admin <- server : return
        user <- server : return
    end
end

@enduml